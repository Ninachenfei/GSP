<template>
	<div class="order-content">
		<uni-tabs @change="changeTab" :index="tabIndex">
			<uni-tab-bar :drag="true" :tab-bars="tabBars" :tab-index="tabIndex"></uni-tab-bar>
			<uni-tab-content>
				<list class="list" @loadmore="loadMore(index1)" loadmoreoffset="10" v-for="(tab,index1) in newsitems" :key="index1">
					<refresh class="refresh" @refresh="onrefresh" @pullingdown="onpullingdown" :display="refreshing ? 'show' : 'hide'">
						<text class="refresh-text">{{refreshText}}</text>
					</refresh>
					<cell v-for="(newsitem,index2) in tab.data" :key="index2">
						<uni-media-list :data="newsitem" @click="goDetail(newsitem)"></uni-media-list>
					</cell>
					<cell class="loadmore">
						<text class="loadmore-text">{{tab.loadingText}}</text>
					</cell>
				</list>
			</uni-tab-content>
		</uni-tabs>
	</div>
</template>

<script>
	import uniTabContent from '@/components/tab-nvue/tabContent.nvue'
	import uniTabBar from '@/components/tab-nvue/tabBar.nvue'
	import uniTabs from '@/components/tab-nvue/tabs.nvue'
	import uniMediaList from '@/components/tab-nvue/mediaList.nvue'
	const dom = weex.requireModule('dom')
	export default {
		components: {
			uniTabContent,
			uniTabBar,
			uniTabs,
			uniMediaList
		},
		data (){
			return {
				refreshing: false,
				refreshText: "下拉可以刷新",
				tabIndex: 0,
				newsitems: [],
				data1: {
					storeName: '拉下贝尔旗舰店',
					img: 'https://img-cdn-qiniu.dcloud.net.cn/uniapp/images/shuijiao.jpg?imageView2/3/w/200/h/100/q/90',
					orderStatus: '买家已发货',
					goodsName: '2018新款Apple/苹果11寸 iPad pro 11寸全面屏 新款Apple/苹果11寸 iPad pro 11寸全面屏寸全面屏寸全面屏寸全面屏',
					orderInfo: ['深空灰色', '无线网络', '256G'],
					expressName: '物流名：中通',
					exoressNumber: '物流单号：123456789123',
					total: '共一件商品 合计：'
					
				},
				tabBars: [{
					name: '全部',
					id: 'all'
				}, {
					name: '待付款',
					id: 'daifukuan'
				}, {
					name: '待发货',
					id: 'daifahuo'
				}, {
					name: '待收货',
					id: 'daishouhuo'
				}, {
					name: '已完成',
					id: 'completed'
				}]
			}
		},
		onLoad(e) {
			this.tabIndex = e.type || 0
		},
		created() {
			setTimeout(() => {
				this.newsitems = this.randomfn();
			}, 150)
		},
		methods: {
			//初始化数据
			randomfn() {
				let ary = [];
				for (let i = 0, length = this.tabBars.length; i < length; i++) {
					let aryItem = {
						loadingText: "加载更多...",
						data: []
					};
					for (let j = 1; j <= 10; j++) {
						aryItem.data.push(this['data1']);
					}
					ary.push(aryItem);
				}
				return ary;
			},
			//下拉刷新
			onrefresh(event) {
				uni.showToast({
					title: "refresh",
					icon: "none"
				});
				this.refreshText = "正在刷新...";
				this.refreshing = true;
				setTimeout(() => {
					console.log("刷新结束")
					this.refreshing = false
				}, 2000)
			},
			//上拉加载
			onpullingdown(event) {
				if (this.refreshing) {
					return;
				}
				if (Math.abs(event.pullingDistance) > Math.abs(event.viewHeight)) {
					this.refreshText = "释放立即刷新";
				} else {
					this.refreshText = "下拉可以刷新";
				}
			},
			goDetail(e) {
				uni.navigateTo({
					url: '/pages/order/detail'
				})
			},
			close(index1, index2) {
				uni.showModal({
					content: '是否删除本条信息？',
					success: (res) => {
						if (res.confirm) {
							this.newsitems[index1].data.splice(index2, 1);
						}
					}
				})
			},
			loadMore(e) {
				setTimeout(() => {
					this.addData(e);
				}, 1000);
			},
			addData(e) {
				console.log("加载更多...");
				if (this.newsitems[e].data.length > 30) {
					this.newsitems[e].loadingText = '没有更多了';
					return;
				}
				for (let i = 1; i <= 10; i++) {
					this.newsitems[e].data.push(this['data1']);
				}
			},
			async changeTab(e) {
				this.tabIndex = e.index;
			},
			getElSize(el) { //得到元素的size
				return new Promise((res, rej) => {
					const result = dom.getComponentRect(el, option => {
						res(option.size);
					})
				})
			},
		}
	}
</script>
<style>
	.list{background-color: #f2f2f2;}
	.tab-bar-item {
		width: 150px;
		height: 100px;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.tab-bar-title {
		height: 100px;
		line-height: 100px;
		font-size: 30px;
		color: #555;
	}

	.active {
		color: #007AFF;
	}

	.loadmore {
		height: 70px;
		width: 750px;
		flex-direction: column;
		justify-content: center;
	}

	.loadmore-text {
		font-size: 30px;
		text-align: center;
		color: #999999;
	}

	.refresh {
		width: 750px;
		height: 70px;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.refresh-text {
		text-align: center;
		font-size: 28px;
		color: #999999;
	}
</style>

